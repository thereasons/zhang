[{
    "q1": "超文本传输协议（Hyper Text Transfer Protocol，HTTP）是一个简单的请求-响应协议，它通常运行在TCP之上。它指定了客户端可能发送给服务器什么样的消息以及得到什么样的响应。请求和响应消息的头以ASCII形式给出；而消息内容则具有一个类似MIME的格式。这个简单模型是早期Web成功的有功之臣，因为它使开发和部署非常地直截了当。（来自百度）",
    "q2": "HTTP协议是无状态的协议。一旦数据交换完毕，客户端与服务器端的连接就会关闭，再次交换数据需要建立新的连接。这就意味着服务器无法从连接上跟踪会话。即用户A购买了一件商品放入购物车内，当再次购买商品时服务器已经无法判断该购买行为是属于用户A的会话还是用户B的会话了。要跟踪该会话，必须引入一种机制。Cookie就是这样的一种机制。它可以弥补HTTP协议无状态的不足。在Session出现之前，基本上所有的网站都采用Cookie来跟踪会话。（搜集资料ing）",
    "q3": "问题较难，时间不够查资料，推荐看一看我的后端的文件！！！",
    "q4": "React和Angular是用于构建Web应用程序的两个顶级JavaScript框架。Vue或Vue.js是一个用于为Web构建引人注目的UI的渐进式框架。它最初于2014年由前Google开发人员Evan You发布，他使用AngularJS并决定排除Angular框架的痛点并构建轻量级的东西。",
    "q5": " 1、DNS解析 将浏览器输入的地址转换为唯一的ip地址"
}, {
    "q1": "TCP旨在适应支持多网络应用的分层协议层次结构。 连接到不同但互连的计算机通信网络的主计算机中的成对进程之间依靠TCP提供可靠的通信服务。TCP假设它可以从较低级别的协议获得简单的，可能不可靠的数据报服务。 原则上，TCP应该能够在从硬线连接到分组交换或电路交换网络的各种通信系统之上操作。(同样来自百度)",
    "q2": "Cookie实际上是一小段的文本信息。客户端请求服务器，如果服务器需要记录该用户状态，就使用response向客户端浏览器颁发一个Cookie。客户端浏览器会把Cookie保存起来。当浏览器再请求该网站时，浏览器把请求的网址连同该Cookie一同提交给服务器。服务器检查该Cookie，以此来辨认用户状态。服务器还可以根据需要修改Cookie的内容。",
    "q3": "",
    "q4": "",
    "q5": " 2、TCP连接 HTTP协议是以TPC协议作为传输层协议的"

}, {
    "q1": "我的见解：这两种协议是在不同层次上使用的，http使用的场景为客户端和服务器端的请求及回应，而TCP更接近底层，它是计算机间建立通信服务的协议，以此给其他协议（例如HTTP）使用的空间。（纯属个人解读）",
    "q2": "除了使用Cookie，Web应用程序中还经常使用Session来记录客户端状态。Session是服务器端使用的一种记录客户端状态的机制，使用上比Cookie简单一些，相应的也增加了服务器的存储压力。",
    "q3": "",
    "q4": "React主要用于构建UI。你可以在React里传递多种类型的参数，如声明代码，帮助你渲染出UI、也可以是静态的HTML DOM元素、也可以传递动态变量、甚至是可交互的应用组件。",
    "q5": " 3、HTTP请求"

}, {
    "q1": "",
    "q2": "Session在用户第一次访问服务器的时候自动创建。需要注意只有访问JSP、Servlet等程序时才会创建Session，只访问HTML、IMAGE等静态资源并不会创建Session。如果尚未生成Session，也可以使用request.getSession(true)强制生成Session。Session生成后，只要用户继续访问，服务器就会更新Session的最后访问时间，并维护该Session。用户每访问服务器一次，无论是否读写Session，服务器都认为该用户的Session“活跃（active）”了一次。",
    "q3": "",
    "q4": "个人见解：我正在做一个项目（我是后端），由于是小型项目所以使用的是jQuery，但想必都有相似之处，都是JavaScript的库，都是为了简化web开发，vue和react都属于较重级别的js库，据其他人所说，学起来很难，但是用起来嘎嘎爽，但愿如此吧。",
    "q5": "4、服务器处理HTTP请求并且返回报文响应报头、响应报文"

}, {
    "q1": "",
    "q2": "个人见解：cookie和 session共同点是都是用于解决对客户端的识别，cookie是使用一串文本以验证用户进行的操作弥补了HTTP请求使用后即关闭的无法判断数据来源问题，session是避免频繁的身份验证，当用户一直在操作时，访问时间时时刷新，若一段时间不使用则需要验证身份。",
    "q3": "",
    "q4": "",
    "q5": " 5、浏览器渲染解析页面"

}]